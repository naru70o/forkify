{"id":"node_modules/core-js/internals/math-scale.js","dependencies":[{"name":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\package.json","includedInParent":true,"mtime":1720078044283},{"name":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1720078043294}],"generated":{"js":"'use strict';\n// `Math.scale` method implementation\n// https://rwaldron.github.io/proposal-math-extensions/\nmodule.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {\n  var nx = +x;\n  var nInLow = +inLow;\n  var nInHigh = +inHigh;\n  var nOutLow = +outLow;\n  var nOutHigh = +outHigh;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (nx !== nx || nInLow !== nInLow || nInHigh !== nInHigh || nOutLow !== nOutLow || nOutHigh !== nOutHigh) return NaN;\n  if (nx === Infinity || nx === -Infinity) return nx;\n  return (nx - nInLow) * (nOutHigh - nOutLow) / (nInHigh - nInLow) + nOutLow;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/math-scale.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"node_modules/core-js/internals/math-scale.js":"'use strict';\n// `Math.scale` method implementation\n// https://rwaldron.github.io/proposal-math-extensions/\nmodule.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {\n  var nx = +x;\n  var nInLow = +inLow;\n  var nInHigh = +inHigh;\n  var nOutLow = +outLow;\n  var nOutHigh = +outHigh;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (nx !== nx || nInLow !== nInLow || nInHigh !== nInHigh || nOutLow !== nOutLow || nOutHigh !== nOutHigh) return NaN;\n  if (nx === Infinity || nx === -Infinity) return nx;\n  return (nx - nInLow) * (nOutHigh - nOutLow) / (nInHigh - nInLow) + nOutLow;\n};\n"},"lineCount":15}},"error":null,"hash":"c17d842d3dab3e1e7dda7a76cafae8fd","cacheData":{"env":{}}}