{"id":"node_modules/core-js/internals/numeric-range-iterator.js","dependencies":[{"name":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\package.json","includedInParent":true,"mtime":1720078044283},{"name":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1720078043294},{"name":"../internals/internal-state","loc":{"line":2,"column":34,"index":48},"parent":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\numeric-range-iterator.js","resolved":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\internal-state.js"},{"name":"../internals/iterator-create-constructor","loc":{"line":3,"column":40,"index":120},"parent":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\numeric-range-iterator.js","resolved":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\iterator-create-constructor.js"},{"name":"../internals/create-iter-result-object","loc":{"line":4,"column":37,"index":202},"parent":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\numeric-range-iterator.js","resolved":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\create-iter-result-object.js"},{"name":"../internals/is-null-or-undefined","loc":{"line":5,"column":32,"index":277},"parent":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\numeric-range-iterator.js","resolved":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\is-null-or-undefined.js"},{"name":"../internals/is-object","loc":{"line":6,"column":23,"index":338},"parent":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\numeric-range-iterator.js","resolved":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\is-object.js"},{"name":"../internals/define-built-in-accessor","loc":{"line":7,"column":36,"index":401},"parent":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\numeric-range-iterator.js","resolved":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\define-built-in-accessor.js"},{"name":"../internals/descriptors","loc":{"line":8,"column":26,"index":469},"parent":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\numeric-range-iterator.js","resolved":"C:\\Users\\khada\\Desktop\\naruto\\javascript\\complete-javascript-course-master\\forkify\\node_modules\\core-js\\internals\\descriptors.js"}],"generated":{"js":"'use strict';\nvar InternalStateModule = require('../internals/internal-state');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar INCORRECT_RANGE = 'Incorrect Iterator.range arguments';\nvar NUMERIC_RANGE_ITERATOR = 'NumericRangeIterator';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(NUMERIC_RANGE_ITERATOR);\n\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\n\nvar $RangeIterator = createIteratorConstructor(function NumericRangeIterator(start, end, option, type, zero, one) {\n  // TODO: Drop the first `typeof` check after removing legacy methods in `core-js@4`\n  if (typeof start != type || (end !== Infinity && end !== -Infinity && typeof end != type)) {\n    throw new $TypeError(INCORRECT_RANGE);\n  }\n  if (start === Infinity || start === -Infinity) {\n    throw new $RangeError(INCORRECT_RANGE);\n  }\n  var ifIncrease = end > start;\n  var inclusiveEnd = false;\n  var step;\n  if (option === undefined) {\n    step = undefined;\n  } else if (isObject(option)) {\n    step = option.step;\n    inclusiveEnd = !!option.inclusive;\n  } else if (typeof option == type) {\n    step = option;\n  } else {\n    throw new $TypeError(INCORRECT_RANGE);\n  }\n  if (isNullOrUndefined(step)) {\n    step = ifIncrease ? one : -one;\n  }\n  if (typeof step != type) {\n    throw new $TypeError(INCORRECT_RANGE);\n  }\n  if (step === Infinity || step === -Infinity || (step === zero && start !== end)) {\n    throw new $RangeError(INCORRECT_RANGE);\n  }\n  // eslint-disable-next-line no-self-compare -- NaN check\n  var hitsEnd = start !== start || end !== end || step !== step || (end > start) !== (step > zero);\n  setInternalState(this, {\n    type: NUMERIC_RANGE_ITERATOR,\n    start: start,\n    end: end,\n    step: step,\n    inclusive: inclusiveEnd,\n    hitsEnd: hitsEnd,\n    currentCount: zero,\n    zero: zero\n  });\n  if (!DESCRIPTORS) {\n    this.start = start;\n    this.end = end;\n    this.step = step;\n    this.inclusive = inclusiveEnd;\n  }\n}, NUMERIC_RANGE_ITERATOR, function next() {\n  var state = getInternalState(this);\n  if (state.hitsEnd) return createIterResultObject(undefined, true);\n  var start = state.start;\n  var end = state.end;\n  var step = state.step;\n  var currentYieldingValue = start + (step * state.currentCount++);\n  if (currentYieldingValue === end) state.hitsEnd = true;\n  var inclusiveEnd = state.inclusive;\n  var endCondition;\n  if (end > start) {\n    endCondition = inclusiveEnd ? currentYieldingValue > end : currentYieldingValue >= end;\n  } else {\n    endCondition = inclusiveEnd ? end > currentYieldingValue : end >= currentYieldingValue;\n  }\n  if (endCondition) {\n    state.hitsEnd = true;\n    return createIterResultObject(undefined, true);\n  } return createIterResultObject(currentYieldingValue, false);\n});\n\nvar addGetter = function (key) {\n  defineBuiltInAccessor($RangeIterator.prototype, key, {\n    get: function () {\n      return getInternalState(this)[key];\n    },\n    set: function () { /* empty */ },\n    configurable: true,\n    enumerable: false\n  });\n};\n\nif (DESCRIPTORS) {\n  addGetter('start');\n  addGetter('end');\n  addGetter('inclusive');\n  addGetter('step');\n}\n\nmodule.exports = $RangeIterator;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/core-js/internals/numeric-range-iterator.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}}],"sources":{"node_modules/core-js/internals/numeric-range-iterator.js":"'use strict';\nvar InternalStateModule = require('../internals/internal-state');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar INCORRECT_RANGE = 'Incorrect Iterator.range arguments';\nvar NUMERIC_RANGE_ITERATOR = 'NumericRangeIterator';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(NUMERIC_RANGE_ITERATOR);\n\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\n\nvar $RangeIterator = createIteratorConstructor(function NumericRangeIterator(start, end, option, type, zero, one) {\n  // TODO: Drop the first `typeof` check after removing legacy methods in `core-js@4`\n  if (typeof start != type || (end !== Infinity && end !== -Infinity && typeof end != type)) {\n    throw new $TypeError(INCORRECT_RANGE);\n  }\n  if (start === Infinity || start === -Infinity) {\n    throw new $RangeError(INCORRECT_RANGE);\n  }\n  var ifIncrease = end > start;\n  var inclusiveEnd = false;\n  var step;\n  if (option === undefined) {\n    step = undefined;\n  } else if (isObject(option)) {\n    step = option.step;\n    inclusiveEnd = !!option.inclusive;\n  } else if (typeof option == type) {\n    step = option;\n  } else {\n    throw new $TypeError(INCORRECT_RANGE);\n  }\n  if (isNullOrUndefined(step)) {\n    step = ifIncrease ? one : -one;\n  }\n  if (typeof step != type) {\n    throw new $TypeError(INCORRECT_RANGE);\n  }\n  if (step === Infinity || step === -Infinity || (step === zero && start !== end)) {\n    throw new $RangeError(INCORRECT_RANGE);\n  }\n  // eslint-disable-next-line no-self-compare -- NaN check\n  var hitsEnd = start !== start || end !== end || step !== step || (end > start) !== (step > zero);\n  setInternalState(this, {\n    type: NUMERIC_RANGE_ITERATOR,\n    start: start,\n    end: end,\n    step: step,\n    inclusive: inclusiveEnd,\n    hitsEnd: hitsEnd,\n    currentCount: zero,\n    zero: zero\n  });\n  if (!DESCRIPTORS) {\n    this.start = start;\n    this.end = end;\n    this.step = step;\n    this.inclusive = inclusiveEnd;\n  }\n}, NUMERIC_RANGE_ITERATOR, function next() {\n  var state = getInternalState(this);\n  if (state.hitsEnd) return createIterResultObject(undefined, true);\n  var start = state.start;\n  var end = state.end;\n  var step = state.step;\n  var currentYieldingValue = start + (step * state.currentCount++);\n  if (currentYieldingValue === end) state.hitsEnd = true;\n  var inclusiveEnd = state.inclusive;\n  var endCondition;\n  if (end > start) {\n    endCondition = inclusiveEnd ? currentYieldingValue > end : currentYieldingValue >= end;\n  } else {\n    endCondition = inclusiveEnd ? end > currentYieldingValue : end >= currentYieldingValue;\n  }\n  if (endCondition) {\n    state.hitsEnd = true;\n    return createIterResultObject(undefined, true);\n  } return createIterResultObject(currentYieldingValue, false);\n});\n\nvar addGetter = function (key) {\n  defineBuiltInAccessor($RangeIterator.prototype, key, {\n    get: function () {\n      return getInternalState(this)[key];\n    },\n    set: function () { /* empty */ },\n    configurable: true,\n    enumerable: false\n  });\n};\n\nif (DESCRIPTORS) {\n  addGetter('start');\n  addGetter('end');\n  addGetter('inclusive');\n  addGetter('step');\n}\n\nmodule.exports = $RangeIterator;\n"},"lineCount":107}},"error":null,"hash":"ef9d9a367e55a9175a4f96bdb0a57b68","cacheData":{"env":{}}}